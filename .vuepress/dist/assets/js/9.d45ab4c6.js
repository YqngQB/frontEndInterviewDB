(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{744:function(a,t,r){"use strict";r.r(t);var s=r(104),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"前端面试-javascript【大厂相关】"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端面试-javascript【大厂相关】"}},[a._v("#")]),a._v(" 前端面试 - JavaScript【大厂相关】")]),a._v(" "),r("p",[a._v("[TOC]")]),a._v(" "),r("h2",{attrs:{id:"一、阿里-25-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、阿里-25-问"}},[a._v("#")]),a._v(" 一、阿里(25 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-使用过的koa2中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用过的koa2中间件"}},[a._v("#")]),a._v(" 1. 使⽤过的koa2中间件")]),a._v(" "),r("h3",{attrs:{id:"_2-koa-body原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-koa-body原理"}},[a._v("#")]),a._v(" 2. koa-body原理")]),a._v(" "),r("h3",{attrs:{id:"_3-介绍自己写过的中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-介绍自己写过的中间件"}},[a._v("#")]),a._v(" 3. 介绍⾃⼰写过的中间件")]),a._v(" "),r("h3",{attrs:{id:"_4-有没有涉及到cluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-有没有涉及到cluster"}},[a._v("#")]),a._v(" 4. 有没有涉及到Cluster")]),a._v(" "),r("h3",{attrs:{id:"_5-master挂了的话pm2怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-master挂了的话pm2怎么处理"}},[a._v("#")]),a._v(" 5. master挂了的话pm2怎么处理")]),a._v(" "),r("h3",{attrs:{id:"_6-如何和mysql进行通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何和mysql进行通信"}},[a._v("#")]),a._v(" 6. 如何和MySQL进⾏通信")]),a._v(" "),r("h3",{attrs:{id:"_7-react声明周期及自己的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-react声明周期及自己的理解"}},[a._v("#")]),a._v(" 7. React声明周期及⾃⼰的理解")]),a._v(" "),r("h3",{attrs:{id:"_8-如何配置react-router"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-如何配置react-router"}},[a._v("#")]),a._v(" 8. 如何配置React-Router")]),a._v(" "),r("h3",{attrs:{id:"_9-路由的动态加载模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-路由的动态加载模块"}},[a._v("#")]),a._v(" 9. 路由的动态加载模块")]),a._v(" "),r("h3",{attrs:{id:"_10-服务端渲染ssr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-服务端渲染ssr"}},[a._v("#")]),a._v(" 10. 服务端渲染SSR")]),a._v(" "),r("h3",{attrs:{id:"_11-介绍路由的-history-与-browser-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-介绍路由的-history-与-browser-的区别"}},[a._v("#")]),a._v(" 11. 介绍路由的 history 与 browser 的区别")]),a._v(" "),r("h3",{attrs:{id:"_12-介绍redux数据流的流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-介绍redux数据流的流程"}},[a._v("#")]),a._v(" 12. 介绍Redux数据流的流程")]),a._v(" "),r("h3",{attrs:{id:"_13-redux如何实现多个组件之间的通信-多个组件使用相同状态如何进行-管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-redux如何实现多个组件之间的通信-多个组件使用相同状态如何进行-管理"}},[a._v("#")]),a._v(" 13. Redux如何实现多个组件之间的通信，多个组件使⽤相同状态如何进⾏ 管理")]),a._v(" "),r("h3",{attrs:{id:"_14-多个组件之间如何拆分各自的state-每块小的组件有自己的状态-它们-之间还有一些公共的状态需要维护-如何思考这块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-多个组件之间如何拆分各自的state-每块小的组件有自己的状态-它们-之间还有一些公共的状态需要维护-如何思考这块"}},[a._v("#")]),a._v(" 14. 多个组件之间如何拆分各⾃的state，每块⼩的组件有⾃⼰的状态，它们 之间还有⼀些公共的状态需要维护，如何思考这块")]),a._v(" "),r("h3",{attrs:{id:"_15-使用过的redux中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-使用过的redux中间件"}},[a._v("#")]),a._v(" 15. 使⽤过的Redux中间件")]),a._v(" "),r("h3",{attrs:{id:"_16-常⻅http请求头"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-常⻅http请求头"}},[a._v("#")]),a._v(" 16. 常⻅Http请求头")]),a._v(" "),r("h3",{attrs:{id:"_17-如何解决跨域的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-如何解决跨域的问题"}},[a._v("#")]),a._v(" 17. 如何解决跨域的问题")]),a._v(" "),r("h3",{attrs:{id:"_18-移动端适配1px的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-移动端适配1px的问题"}},[a._v("#")]),a._v(" 18. 移动端适配1px的问题")]),a._v(" "),r("h3",{attrs:{id:"_19-介绍flex布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-介绍flex布局"}},[a._v("#")]),a._v(" 19. 介绍flex布局")]),a._v(" "),r("h3",{attrs:{id:"_20-使用过webpack里面哪些plugin和loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-使用过webpack里面哪些plugin和loader"}},[a._v("#")]),a._v(" 20. 使⽤过webpack⾥⾯哪些plugin和loader")]),a._v(" "),r("h3",{attrs:{id:"_21-webpack里面的插件是怎么实现的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-webpack里面的插件是怎么实现的"}},[a._v("#")]),a._v(" 21. webpack⾥⾯的插件是怎么实现的 ?")]),a._v(" "),r("h3",{attrs:{id:"_22-dev-server是怎么跑起来的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-dev-server是怎么跑起来的"}},[a._v("#")]),a._v(" 22. dev-server是怎么跑起来的 ?")]),a._v(" "),r("h3",{attrs:{id:"_23-抽取公共文件是怎么配置的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-抽取公共文件是怎么配置的"}},[a._v("#")]),a._v(" 23. 抽取公共⽂件是怎么配置的 ?")]),a._v(" "),r("h3",{attrs:{id:"_24-项目中如何处理安全问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-项目中如何处理安全问题"}},[a._v("#")]),a._v(" 24. 项⽬中如何处理安全问题")]),a._v(" "),r("h3",{attrs:{id:"_25-怎么实现this对象的深拷⻉"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-怎么实现this对象的深拷⻉"}},[a._v("#")]),a._v(" 25. 怎么实现this对象的深拷⻉")]),a._v(" "),r("h2",{attrs:{id:"二、网易-26-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、网易-26-问"}},[a._v("#")]),a._v(" 二、网易(26 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-介绍redux-主要解决什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍redux-主要解决什么问题"}},[a._v("#")]),a._v(" 1. 介绍redux，主要解决什么问题")]),a._v(" "),r("h3",{attrs:{id:"_2-文件上传如何做断点续传"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-文件上传如何做断点续传"}},[a._v("#")]),a._v(" 2. ⽂件上传如何做断点续传")]),a._v(" "),r("h3",{attrs:{id:"_3-表单可以跨域吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-表单可以跨域吗"}},[a._v("#")]),a._v(" 3. 表单可以跨域吗")]),a._v(" "),r("h3",{attrs:{id:"_4-promise、async有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-promise、async有什么区别"}},[a._v("#")]),a._v(" 4. promise、async有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_5-搜索请求如何处理-防抖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-搜索请求如何处理-防抖"}},[a._v("#")]),a._v(" 5. 搜索请求如何处理（防抖）")]),a._v(" "),r("h3",{attrs:{id:"_6-搜索请求中文如何请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-搜索请求中文如何请求"}},[a._v("#")]),a._v(" 6. 搜索请求中⽂如何请求")]),a._v(" "),r("h3",{attrs:{id:"_7-介绍观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-介绍观察者模式"}},[a._v("#")]),a._v(" 7. 介绍观察者模式")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍中介者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍中介者模式"}},[a._v("#")]),a._v(" 8. 介绍中介者模式")]),a._v(" "),r("h3",{attrs:{id:"_9-观察者和订阅-发布的区别-各自用在哪里"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-观察者和订阅-发布的区别-各自用在哪里"}},[a._v("#")]),a._v(" 9. 观察者和订阅-发布的区别，各⾃⽤在哪⾥")]),a._v(" "),r("h3",{attrs:{id:"_10-介绍react优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-介绍react优化"}},[a._v("#")]),a._v(" 10. 介绍react优化")]),a._v(" "),r("h3",{attrs:{id:"_11-介绍http2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-介绍http2-0"}},[a._v("#")]),a._v(" 11. 介绍http2.0")]),a._v(" "),r("h3",{attrs:{id:"_12-通过什么做到并发请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-通过什么做到并发请求"}},[a._v("#")]),a._v(" 12. 通过什么做到并发请求")]),a._v(" "),r("h3",{attrs:{id:"_13-http1-1时如何复用tcp连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-http1-1时如何复用tcp连接"}},[a._v("#")]),a._v(" 13. http1.1时如何复⽤tcp连接")]),a._v(" "),r("h3",{attrs:{id:"_14-介绍service-worker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-介绍service-worker"}},[a._v("#")]),a._v(" 14. 介绍service worker")]),a._v(" "),r("h3",{attrs:{id:"_15-介绍css3中position-sticky"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-介绍css3中position-sticky"}},[a._v("#")]),a._v(" 15. 介绍css3中position:sticky")]),a._v(" "),r("h3",{attrs:{id:"_16-redux请求中间件如何处理并发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-redux请求中间件如何处理并发"}},[a._v("#")]),a._v(" 16. redux请求中间件如何处理并发")]),a._v(" "),r("h3",{attrs:{id:"_17-介绍promise-异常捕获"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-介绍promise-异常捕获"}},[a._v("#")]),a._v(" 17. 介绍Promise，异常捕获")]),a._v(" "),r("h3",{attrs:{id:"_18-介绍position属性包括css3新增"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-介绍position属性包括css3新增"}},[a._v("#")]),a._v(" 18. 介绍position属性包括CSS3新增")]),a._v(" "),r("h3",{attrs:{id:"_19-浏览器事件流向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-浏览器事件流向"}},[a._v("#")]),a._v(" 19. 浏览器事件流向")]),a._v(" "),r("h3",{attrs:{id:"_20-介绍事件代理以及优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-介绍事件代理以及优缺点"}},[a._v("#")]),a._v(" 20. 介绍事件代理以及优缺点")]),a._v(" "),r("h3",{attrs:{id:"_21-react组件中怎么做事件代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-react组件中怎么做事件代理"}},[a._v("#")]),a._v(" 21. React组件中怎么做事件代理")]),a._v(" "),r("h3",{attrs:{id:"_22-react组件事件代理的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-react组件事件代理的原理"}},[a._v("#")]),a._v(" 22. React组件事件代理的原理")]),a._v(" "),r("h3",{attrs:{id:"_23-介绍this各种情况"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-介绍this各种情况"}},[a._v("#")]),a._v(" 23. 介绍this各种情况")]),a._v(" "),r("h3",{attrs:{id:"_24-前端怎么控制管理路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-前端怎么控制管理路由"}},[a._v("#")]),a._v(" 24. 前端怎么控制管理路由")]),a._v(" "),r("h3",{attrs:{id:"_25-使用路由时出现问题如何解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-使用路由时出现问题如何解决"}},[a._v("#")]),a._v(" 25. 使⽤路由时出现问题如何解决")]),a._v(" "),r("h3",{attrs:{id:"_26-react怎么做数据的检查和变化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-react怎么做数据的检查和变化"}},[a._v("#")]),a._v(" 26. React怎么做数据的检查和变化")]),a._v(" "),r("h2",{attrs:{id:"三、滴滴-28-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、滴滴-28-问"}},[a._v("#")]),a._v(" 三、滴滴(28 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-react-router怎么实现路由切换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-react-router怎么实现路由切换"}},[a._v("#")]),a._v(" 1. react-router怎么实现路由切换")]),a._v(" "),r("h3",{attrs:{id:"_2-react-router里的标签和标签有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-router里的标签和标签有什么区别"}},[a._v("#")]),a._v(" 2. react-router⾥的标签和标签有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_3-标签默认事件禁掉之后做了什么才实现了跳转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-标签默认事件禁掉之后做了什么才实现了跳转"}},[a._v("#")]),a._v(" 3. 标签默认事件禁掉之后做了什么才实现了跳转")]),a._v(" "),r("h3",{attrs:{id:"_4-react层面的性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-react层面的性能优化"}},[a._v("#")]),a._v(" 4. React层⾯的性能优化")]),a._v(" "),r("h3",{attrs:{id:"_5-整个前端性能提升大致分几类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-整个前端性能提升大致分几类"}},[a._v("#")]),a._v(" 5. 整个前端性能提升⼤致分⼏类")]),a._v(" "),r("h3",{attrs:{id:"_6-import-button-from-antd-打包的时候只打包button-分模块加载-是怎么做到的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-import-button-from-antd-打包的时候只打包button-分模块加载-是怎么做到的"}},[a._v("#")]),a._v(" 6. import { Button } from 'antd'，打包的时候只打包button， 分模块加载，是怎么做到的")]),a._v(" "),r("h3",{attrs:{id:"_7-使用import时-webpack对node-modules里的依赖会做什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用import时-webpack对node-modules里的依赖会做什么"}},[a._v("#")]),a._v(" 7. 使⽤import时，webpack对node_modules⾥的依赖会做什么")]),a._v(" "),r("h3",{attrs:{id:"_8-js异步解决方案的发展历程以及优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-js异步解决方案的发展历程以及优缺点"}},[a._v("#")]),a._v(" 8. JS异步解决⽅案的发展历程以及优缺点")]),a._v(" "),r("h3",{attrs:{id:"_9-http报文的请求会有几个部分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-http报文的请求会有几个部分"}},[a._v("#")]),a._v(" 9. Http报⽂的请求会有⼏个部分")]),a._v(" "),r("h3",{attrs:{id:"_10-cookie放哪里-cookie能做的事情和存在的价值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-cookie放哪里-cookie能做的事情和存在的价值"}},[a._v("#")]),a._v(" 10. cookie放哪⾥，cookie能做的事情和存在的价值")]),a._v(" "),r("h3",{attrs:{id:"_11-cookie和token都存放在header里面-为什么只劫持前者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-cookie和token都存放在header里面-为什么只劫持前者"}},[a._v("#")]),a._v(" 11. cookie和token都存放在header⾥⾯，为什么只劫持前者")]),a._v(" "),r("h3",{attrs:{id:"_12-cookie和session有哪些方面的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-cookie和session有哪些方面的区别"}},[a._v("#")]),a._v(" 12. cookie和session有哪些⽅⾯的区别")]),a._v(" "),r("h3",{attrs:{id:"_13-react中dom结构发生变化后内部经历了哪些变化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-react中dom结构发生变化后内部经历了哪些变化"}},[a._v("#")]),a._v(" 13. React中Dom结构发⽣变化后内部经历了哪些变化")]),a._v(" "),r("h3",{attrs:{id:""}},[r("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),r("h3",{attrs:{id:"_14-react挂载的时候有3个组件-textcomponent、-composecomponent、domcomponent-区别和关系-dom结构发生变化-时怎么区分data的变化-怎么更新-更新怎么调度-如果更新的时候还有其-他任务存在怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-react挂载的时候有3个组件-textcomponent、-composecomponent、domcomponent-区别和关系-dom结构发生变化-时怎么区分data的变化-怎么更新-更新怎么调度-如果更新的时候还有其-他任务存在怎么处理"}},[a._v("#")]),a._v(" 14. React挂载的时候有3个组件，textComponent、 composeComponent、domComponent，区别和关系，Dom结构发⽣变化 时怎么区分data的变化，怎么更新，更新怎么调度，如果更新的时候还有其 他任务存在怎么处理")]),a._v(" "),r("h3",{attrs:{id:"_15-key主要是解决哪一类的问题-为什么不建议用索引index-重绘"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-key主要是解决哪一类的问题-为什么不建议用索引index-重绘"}},[a._v("#")]),a._v(" 15. key主要是解决哪⼀类的问题，为什么不建议⽤索引index（重绘）")]),a._v(" "),r("h3",{attrs:{id:"_16-redux中异步的请求怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-redux中异步的请求怎么处理"}},[a._v("#")]),a._v(" 16. Redux中异步的请求怎么处理")]),a._v(" "),r("h3",{attrs:{id:"_17-redux中间件是什么东⻄-接受几个参数-两端的柯里化函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-redux中间件是什么东⻄-接受几个参数-两端的柯里化函数"}},[a._v("#")]),a._v(" 17. Redux中间件是什么东⻄，接受⼏个参数（两端的柯⾥化函数）")]),a._v(" "),r("h3",{attrs:{id:"_18-柯里化函数两端的参数具体是什么东⻄"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-柯里化函数两端的参数具体是什么东⻄"}},[a._v("#")]),a._v(" 18. 柯⾥化函数两端的参数具体是什么东⻄")]),a._v(" "),r("h3",{attrs:{id:"_19-中间件是怎么拿到store和action-然后怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-中间件是怎么拿到store和action-然后怎么处理"}},[a._v("#")]),a._v(" 19. 中间件是怎么拿到store和action，然后怎么处理")]),a._v(" "),r("h3",{attrs:{id:"-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")])]),a._v(" "),r("h3",{attrs:{id:"_20-state是怎么注入到组件的-从reducer到组件经历了什么样的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-state是怎么注入到组件的-从reducer到组件经历了什么样的过程"}},[a._v("#")]),a._v(" 20. state是怎么注⼊到组件的，从reducer到组件经历了什么样的过程")]),a._v(" "),r("h3",{attrs:{id:"_21-koa中response-send、response-rounded、response-json发生了"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-koa中response-send、response-rounded、response-json发生了"}},[a._v("#")]),a._v(" 21. koa中response.send、response.rounded、response.json发⽣了")]),a._v(" "),r("h3",{attrs:{id:"什么-事-浏览器为什么能识别到它是一个json结构或是html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么-事-浏览器为什么能识别到它是一个json结构或是html"}},[a._v("#")]),a._v(" 什么 事，浏览器为什么能识别到它是⼀个json结构或是html")]),a._v(" "),r("h3",{attrs:{id:"_22-koa-bodyparser怎么来解析request"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-koa-bodyparser怎么来解析request"}},[a._v("#")]),a._v(" 22. koa-bodyparser怎么来解析request")]),a._v(" "),r("h3",{attrs:{id:"_23-webpack整个生命周期-loader和plugin有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-webpack整个生命周期-loader和plugin有什么区别"}},[a._v("#")]),a._v(" 23. webpack整个⽣命周期，loader和plugin有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_24-介绍ast-abstract-syntax-tree-抽象语法树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-介绍ast-abstract-syntax-tree-抽象语法树"}},[a._v("#")]),a._v(" 24. 介绍AST（Abstract Syntax Tree）抽象语法树")]),a._v(" "),r("h3",{attrs:{id:"_25-安卓activity之间数据是怎么传递的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-安卓activity之间数据是怎么传递的"}},[a._v("#")]),a._v(" 25. 安卓Activity之间数据是怎么传递的")]),a._v(" "),r("h3",{attrs:{id:"_26-安卓4-0到6-0过程中webview对js兼容性的变化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-安卓4-0到6-0过程中webview对js兼容性的变化"}},[a._v("#")]),a._v(" 26. 安卓4.0到6.0过程中WebView对js兼容性的变化")]),a._v(" "),r("h3",{attrs:{id:"_27-webview和原生是如何通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-webview和原生是如何通信"}},[a._v("#")]),a._v(" 27. WebView和原⽣是如何通信")]),a._v(" "),r("h3",{attrs:{id:"_28-跨域怎么解决-有没有使用过apache等方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-跨域怎么解决-有没有使用过apache等方案"}},[a._v("#")]),a._v(" 28. 跨域怎么解决，有没有使⽤过Apache等⽅案")]),a._v(" "),r("h2",{attrs:{id:"四、头条-17-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、头条-17-问"}},[a._v("#")]),a._v(" 四、头条(17 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-对async、await的理解-内部原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-对async、await的理解-内部原理"}},[a._v("#")]),a._v(" 1. 对async、await的理解，内部原理")]),a._v(" "),r("h3",{attrs:{id:"_2-介绍下promise-内部实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍下promise-内部实现"}},[a._v("#")]),a._v(" 2. 介绍下Promise，内部实现")]),a._v(" "),r("h3",{attrs:{id:"_3-清除浮动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-清除浮动"}},[a._v("#")]),a._v(" 3. 清除浮动")]),a._v(" "),r("h3",{attrs:{id:"_4-定位问题-绝对定位、相对定位等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-定位问题-绝对定位、相对定位等"}},[a._v("#")]),a._v(" 4. 定位问题（绝对定位、相对定位等）")]),a._v(" "),r("h3",{attrs:{id:"_5-从输入url到⻚面加载全过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-从输入url到⻚面加载全过程"}},[a._v("#")]),a._v(" 5. 从输⼊URL到⻚⾯加载全过程")]),a._v(" "),r("h3",{attrs:{id:"_6-tcp3次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-tcp3次握手"}},[a._v("#")]),a._v(" 6. tcp3次握⼿")]),a._v(" "),r("h3",{attrs:{id:"_7-tcp属于哪一层-1-物理层-2-数据链路层-3-网络层-ip-4-传输层-tcp-5-应用层-http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-tcp属于哪一层-1-物理层-2-数据链路层-3-网络层-ip-4-传输层-tcp-5-应用层-http"}},[a._v("#")]),a._v(" 7. tcp属于哪⼀层（1 物理层 -> 2 数据链路层 -> 3 ⽹络层(ip)-> 4 传输层 (tcp) -> 5 应⽤层(http)）")]),a._v(" "),r("h3",{attrs:{id:"_8-redux的设计思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-redux的设计思想"}},[a._v("#")]),a._v(" 8. redux的设计思想")]),a._v(" "),r("h3",{attrs:{id:"_9-接入redux的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-接入redux的过程"}},[a._v("#")]),a._v(" 9. 接⼊redux的过程")]),a._v(" "),r("h3",{attrs:{id:"_10-绑定connect的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-绑定connect的过程"}},[a._v("#")]),a._v(" 10. 绑定connect的过程")]),a._v(" "),r("h3",{attrs:{id:"_11-connect原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-connect原理"}},[a._v("#")]),a._v(" 11. connect原理")]),a._v(" "),r("h3",{attrs:{id:"_12-webpack介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-webpack介绍"}},[a._v("#")]),a._v(" 12. webpack介绍")]),a._v(" "),r("h3",{attrs:{id:"_13-和-的区别-什么情况下用相等"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-和-的区别-什么情况下用相等"}},[a._v("#")]),a._v(" 13. == 和 ===的区别，什么情况下⽤相等==")]),a._v(" "),r("h3",{attrs:{id:"_14-bind、call、apply的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-bind、call、apply的区别"}},[a._v("#")]),a._v(" 14. bind、call、apply的区别")]),a._v(" "),r("h3",{attrs:{id:"_15-动画的了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-动画的了解"}},[a._v("#")]),a._v(" 15. 动画的了解")]),a._v(" "),r("h3",{attrs:{id:"_16-介绍下原型链-解决的是继承问题吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-介绍下原型链-解决的是继承问题吗"}},[a._v("#")]),a._v(" 16. 介绍下原型链（解决的是继承问题吗）")]),a._v(" "),r("h3",{attrs:{id:"_17-对跨域的了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-对跨域的了解"}},[a._v("#")]),a._v(" 17. 对跨域的了解")]),a._v(" "),r("h3",{attrs:{id:"五、有赞-24-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五、有赞-24-问"}},[a._v("#")]),a._v(" 五、有赞(24 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-linux-754-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-linux-754-介绍"}},[a._v("#")]),a._v(" 1. Linux 754 介绍")]),a._v(" "),r("h3",{attrs:{id:"_2-介绍冒泡排序-选择排序-冒泡排序如何优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍冒泡排序-选择排序-冒泡排序如何优化"}},[a._v("#")]),a._v(" 2. 介绍冒泡排序，选择排序，冒泡排序如何优化")]),a._v(" "),r("h3",{attrs:{id:"_3-transform动画和直接使用left、top改变位置有什么优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-transform动画和直接使用left、top改变位置有什么优缺点"}},[a._v("#")]),a._v(" 3. transform动画和直接使⽤left、top改变位置有什么优缺点")]),a._v(" "),r("h3",{attrs:{id:"_4-如何判断链表是否有环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何判断链表是否有环"}},[a._v("#")]),a._v(" 4. 如何判断链表是否有环")]),a._v(" "),r("h3",{attrs:{id:"_5-介绍二叉搜索树的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍二叉搜索树的特点"}},[a._v("#")]),a._v(" 5. 介绍⼆叉搜索树的特点")]),a._v(" "),r("h3",{attrs:{id:"_6-介绍暂时性死区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-介绍暂时性死区"}},[a._v("#")]),a._v(" 6. 介绍暂时性死区")]),a._v(" "),r("h3",{attrs:{id:"_7-es6中的map和原生的对象有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-es6中的map和原生的对象有什么区别"}},[a._v("#")]),a._v(" 7. ES6中的map和原⽣的对象有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_8-观察者和发布-订阅的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-观察者和发布-订阅的区别"}},[a._v("#")]),a._v(" 8. 观察者和发布-订阅的区别")]),a._v(" "),r("h3",{attrs:{id:"_9-react异步渲染的概念-介绍time-slicing-和-suspense"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-react异步渲染的概念-介绍time-slicing-和-suspense"}},[a._v("#")]),a._v(" 9. react异步渲染的概念,介绍Time Slicing 和 Suspense")]),a._v(" "),r("h3",{attrs:{id:"_10-16-x声明周期的改变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-16-x声明周期的改变"}},[a._v("#")]),a._v(" 10. 16.X声明周期的改变")]),a._v(" "),r("h3",{attrs:{id:"_11-16-x中props改变后在哪个生命周期中处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-16-x中props改变后在哪个生命周期中处理"}},[a._v("#")]),a._v(" 11. 16.X中props改变后在哪个⽣命周期中处理")]),a._v(" "),r("h3",{attrs:{id:"_12-介绍纯函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-介绍纯函数"}},[a._v("#")]),a._v(" 12. 介绍纯函数")]),a._v(" "),r("h3",{attrs:{id:"_13-前端性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-前端性能优化"}},[a._v("#")]),a._v(" 13. 前端性能优化")]),a._v(" "),r("h3",{attrs:{id:"_14-purecomponent和functioncomponent区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-purecomponent和functioncomponent区别"}},[a._v("#")]),a._v(" 14. pureComponent和FunctionComponent区别")]),a._v(" "),r("h3",{attrs:{id:"_15-介绍jsx-16-如何做rn在安卓和ios端的适配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-介绍jsx-16-如何做rn在安卓和ios端的适配"}},[a._v("#")]),a._v(" 15. 介绍JSX 16. 如何做RN在安卓和IOS端的适配")]),a._v(" "),r("h3",{attrs:{id:"_17-rn为什么能在原生中绘制成原生组件-bundle-js"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-rn为什么能在原生中绘制成原生组件-bundle-js"}},[a._v("#")]),a._v(" 17. RN为什么能在原⽣中绘制成原⽣组件（bundle.js）")]),a._v(" "),r("h3",{attrs:{id:"_18-介绍虚拟dom-19-如何设计一个localstorage-保证数据的实效性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-介绍虚拟dom-19-如何设计一个localstorage-保证数据的实效性"}},[a._v("#")]),a._v(" 18. 介绍虚拟DOM 19. 如何设计⼀个localStorage，保证数据的实效性")]),a._v(" "),r("h3",{attrs:{id:"_20-如何设计promise-all"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-如何设计promise-all"}},[a._v("#")]),a._v(" 20. 如何设计Promise.all()")]),a._v(" "),r("h3",{attrs:{id:"_21-介绍高阶组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-介绍高阶组件"}},[a._v("#")]),a._v(" 21. 介绍⾼阶组件")]),a._v(" "),r("h3",{attrs:{id:"_22-sum-2-3-实现sum-2-3-的效果"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-sum-2-3-实现sum-2-3-的效果"}},[a._v("#")]),a._v(" 22. sum(2, 3)实现sum(2)(3)的效果")]),a._v(" "),r("h3",{attrs:{id:"_23-react性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-react性能优化"}},[a._v("#")]),a._v(" 23. react性能优化")]),a._v(" "),r("h3",{attrs:{id:"_24-两个对象如何比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-两个对象如何比较"}},[a._v("#")]),a._v(" 24. 两个对象如何⽐较")]),a._v(" "),r("h3",{attrs:{id:"六、挖财-24-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六、挖财-24-问"}},[a._v("#")]),a._v(" 六、挖财(24 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-js的原型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-js的原型"}},[a._v("#")]),a._v(" 1.  JS的原型")]),a._v(" "),r("h3",{attrs:{id:"_2-变量作用域链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量作用域链"}},[a._v("#")]),a._v(" 2. 变量作⽤域链")]),a._v(" "),r("h3",{attrs:{id:"_3-call、apply、bind的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-call、apply、bind的区别"}},[a._v("#")]),a._v(" 3. call、apply、bind的区别")]),a._v(" "),r("h3",{attrs:{id:"_4-防抖和节流的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-防抖和节流的区别"}},[a._v("#")]),a._v(" 4. 防抖和节流的区别")]),a._v(" "),r("h3",{attrs:{id:"_5-介绍各种异步方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍各种异步方案"}},[a._v("#")]),a._v(" 5. 介绍各种异步⽅案")]),a._v(" "),r("h3",{attrs:{id:"_6-react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-react生命周期"}},[a._v("#")]),a._v(" 6. react⽣命周期")]),a._v(" "),r("h3",{attrs:{id:"_7-介绍fiber"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-介绍fiber"}},[a._v("#")]),a._v(" 7. 介绍Fiber")]),a._v(" "),r("h3",{attrs:{id:"_8-前端性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-前端性能优化"}},[a._v("#")]),a._v(" 8. 前端性能优化")]),a._v(" "),r("h3",{attrs:{id:"_9-介绍dom树对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-介绍dom树对比"}},[a._v("#")]),a._v(" 9. 介绍DOM树对⽐")]),a._v(" "),r("h3",{attrs:{id:"_10-react中的key的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-react中的key的作用"}},[a._v("#")]),a._v(" 10. react中的key的作⽤")]),a._v(" "),r("h3",{attrs:{id:"_11-如何设计状态树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-如何设计状态树"}},[a._v("#")]),a._v(" 11. 如何设计状态树")]),a._v(" "),r("h3",{attrs:{id:"_12-介绍css-xsrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-介绍css-xsrf"}},[a._v("#")]),a._v(" 12. 介绍css，xsrf")]),a._v(" "),r("h3",{attrs:{id:"_13-http缓存控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-http缓存控制"}},[a._v("#")]),a._v(" 13. http缓存控制")]),a._v(" "),r("h3",{attrs:{id:"_14-项目中如何应用数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-项目中如何应用数据结构"}},[a._v("#")]),a._v(" 14. 项⽬中如何应⽤数据结构")]),a._v(" "),r("h3",{attrs:{id:"_15-native提供了什么能力给rn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-native提供了什么能力给rn"}},[a._v("#")]),a._v(" 15. native提供了什么能⼒给RN")]),a._v(" "),r("h3",{attrs:{id:"_16-如何做工程上的优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-如何做工程上的优化"}},[a._v("#")]),a._v(" 16. 如何做⼯程上的优化")]),a._v(" "),r("h3",{attrs:{id:"_17-shouldcomponentupdate是为了解决什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-shouldcomponentupdate是为了解决什么问题"}},[a._v("#")]),a._v(" 17. shouldComponentUpdate是为了解决什么问题")]),a._v(" "),r("h3",{attrs:{id:"_18-如何解决props层级过深的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-如何解决props层级过深的问题"}},[a._v("#")]),a._v(" 18. 如何解决props层级过深的问题")]),a._v(" "),r("h3",{attrs:{id:"_19-前端怎么做单元测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-前端怎么做单元测试"}},[a._v("#")]),a._v(" 19. 前端怎么做单元测试")]),a._v(" "),r("h3",{attrs:{id:"_20-webpack生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-webpack生命周期"}},[a._v("#")]),a._v(" 20. webpack⽣命周期")]),a._v(" "),r("h3",{attrs:{id:"_21-webpack打包的整个过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-webpack打包的整个过程"}},[a._v("#")]),a._v(" 21. webpack打包的整个过程")]),a._v(" "),r("h3",{attrs:{id:"_22-常用的plugins"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-常用的plugins"}},[a._v("#")]),a._v(" 22. 常⽤的plugins")]),a._v(" "),r("h3",{attrs:{id:"_23-pm2怎么做进程管理-进程挂掉怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-pm2怎么做进程管理-进程挂掉怎么处理"}},[a._v("#")]),a._v(" 23. pm2怎么做进程管理，进程挂掉怎么处理")]),a._v(" "),r("h3",{attrs:{id:"_24-不用pm2怎么做进程管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-不用pm2怎么做进程管理"}},[a._v("#")]),a._v(" 24. 不⽤pm2怎么做进程管理")]),a._v(" "),r("h2",{attrs:{id:"七、泸江-23-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七、泸江-23-问"}},[a._v("#")]),a._v(" 七、泸江(23 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-介绍下浏览器跨域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍下浏览器跨域"}},[a._v("#")]),a._v(" 1. 介绍下浏览器跨域")]),a._v(" "),r("h3",{attrs:{id:"_2-怎么去解决跨域问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-怎么去解决跨域问题"}},[a._v("#")]),a._v(" 2. 怎么去解决跨域问题")]),a._v(" "),r("h3",{attrs:{id:"_3-jsonp方案需要服务端怎么配合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-jsonp方案需要服务端怎么配合"}},[a._v("#")]),a._v(" 3. jsonp⽅案需要服务端怎么配合")]),a._v(" "),r("h3",{attrs:{id:"_4-ajax发生跨域要设置什么-前端"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-ajax发生跨域要设置什么-前端"}},[a._v("#")]),a._v(" 4. Ajax发⽣跨域要设置什么（前端）")]),a._v(" "),r("h3",{attrs:{id:"_5-加上cors之后从发起到请求正式成功的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-加上cors之后从发起到请求正式成功的过程"}},[a._v("#")]),a._v(" 5. 加上CORS之后从发起到请求正式成功的过程")]),a._v(" "),r("h3",{attrs:{id:"_6-xsrf跨域攻击的安全性问题怎么防范"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-xsrf跨域攻击的安全性问题怎么防范"}},[a._v("#")]),a._v(" 6. xsrf跨域攻击的安全性问题怎么防范")]),a._v(" "),r("h3",{attrs:{id:"_7-使用async会注意哪些东⻄"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用async会注意哪些东⻄"}},[a._v("#")]),a._v(" 7. 使⽤Async会注意哪些东⻄")]),a._v(" "),r("h3",{attrs:{id:"_8-async里面有多个await请求-可以怎么优化-请求是否有依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-async里面有多个await请求-可以怎么优化-请求是否有依赖"}},[a._v("#")]),a._v(" 8. Async⾥⾯有多个await请求，可以怎么优化（请求是否有依赖）")]),a._v(" "),r("h3",{attrs:{id:"_9-promise和async处理失败的时候有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-promise和async处理失败的时候有什么区别"}},[a._v("#")]),a._v(" 9. Promise和Async处理失败的时候有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_10-redux在状态管理方面解决了react本身不能解决的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-redux在状态管理方面解决了react本身不能解决的问题"}},[a._v("#")]),a._v(" 10. Redux在状态管理⽅⾯解决了React本身不能解决的问题")]),a._v(" "),r("h3",{attrs:{id:"_11-redux有没有做过封装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-redux有没有做过封装"}},[a._v("#")]),a._v(" 11. Redux有没有做过封装")]),a._v(" "),r("h3",{attrs:{id:"_12-react生命周期-常用的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-react生命周期-常用的生命周期"}},[a._v("#")]),a._v(" 12. react⽣命周期，常⽤的⽣命周期")]),a._v(" "),r("h3",{attrs:{id:"_13-对应的生命周期做什么事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-对应的生命周期做什么事"}},[a._v("#")]),a._v(" 13. 对应的⽣命周期做什么事")]),a._v(" "),r("h3",{attrs:{id:"_14-遇到性能问题一般在哪个生命周期里解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-遇到性能问题一般在哪个生命周期里解决"}},[a._v("#")]),a._v(" 14. 遇到性能问题⼀般在哪个⽣命周期⾥解决")]),a._v(" "),r("h3",{attrs:{id:"_15-怎么做性能优化-异步加载组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-怎么做性能优化-异步加载组件"}},[a._v("#")]),a._v(" 15. 怎么做性能优化（异步加载组件...）")]),a._v(" "),r("h3",{attrs:{id:"_16-写react有哪些细节可以优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-写react有哪些细节可以优化"}},[a._v("#")]),a._v(" 16. 写react有哪些细节可以优化")]),a._v(" "),r("h3",{attrs:{id:"_17-react的事件机制-绑定一个事件到一个组件上"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-react的事件机制-绑定一个事件到一个组件上"}},[a._v("#")]),a._v(" 17. React的事件机制（绑定⼀个事件到⼀个组件上）")]),a._v(" "),r("h3",{attrs:{id:"_18-介绍下事件代理-主要解决什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-介绍下事件代理-主要解决什么问题"}},[a._v("#")]),a._v(" 18. 介绍下事件代理，主要解决什么问题")]),a._v(" "),r("h3",{attrs:{id:"_19-前端开发中用到哪些设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-前端开发中用到哪些设计模式"}},[a._v("#")]),a._v(" 19. 前端开发中⽤到哪些设计模式")]),a._v(" "),r("h3",{attrs:{id:"_20-react-redux中哪些功能用到了哪些设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-react-redux中哪些功能用到了哪些设计模式"}},[a._v("#")]),a._v(" 20. React/Redux中哪些功能⽤到了哪些设计模式")]),a._v(" "),r("h3",{attrs:{id:"_21-js变量类型分为几种-区别是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-js变量类型分为几种-区别是什么"}},[a._v("#")]),a._v(" 21. JS变量类型分为⼏种，区别是什么")]),a._v(" "),r("h3",{attrs:{id:"_22-js里垃圾回收机制是什么-常用的是哪种-怎么处理的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-js里垃圾回收机制是什么-常用的是哪种-怎么处理的"}},[a._v("#")]),a._v(" 22. JS⾥垃圾回收机制是什么，常⽤的是哪种，怎么处理的")]),a._v(" "),r("h3",{attrs:{id:"_23-一般怎么组织css-webpack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-一般怎么组织css-webpack"}},[a._v("#")]),a._v(" 23. ⼀般怎么组织CSS（Webpack）")]),a._v(" "),r("h2",{attrs:{id:"八、饿了吗-25-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八、饿了吗-25-问"}},[a._v("#")]),a._v(" 八、饿了吗(25 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-小程序里面开⻚面最多多少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-小程序里面开⻚面最多多少"}},[a._v("#")]),a._v(" 1. ⼩程序⾥⾯开⻚⾯最多多少")]),a._v(" "),r("h3",{attrs:{id:"_2-react子父组件之间如何传值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-react子父组件之间如何传值"}},[a._v("#")]),a._v(" 2. React⼦⽗组件之间如何传值")]),a._v(" "),r("h3",{attrs:{id:"_3-emit事件怎么发-需要引入什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-emit事件怎么发-需要引入什么"}},[a._v("#")]),a._v(" 3. Emit事件怎么发，需要引⼊什么")]),a._v(" "),r("h3",{attrs:{id:"_4-介绍下react高阶组件-和普通组件有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-介绍下react高阶组件-和普通组件有什么区别"}},[a._v("#")]),a._v(" 4. 介绍下React⾼阶组件，和普通组件有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_5-一个对象数组-每个子对象包含一个id和name-react如何渲染出全部的-name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-一个对象数组-每个子对象包含一个id和name-react如何渲染出全部的-name"}},[a._v("#")]),a._v(" 5. ⼀个对象数组，每个⼦对象包含⼀个id和name，React如何渲染出全部的 name")]),a._v(" "),r("h3",{attrs:{id:"_6-在哪个生命周期里写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-在哪个生命周期里写"}},[a._v("#")]),a._v(" 6. 在哪个⽣命周期⾥写")]),a._v(" "),r("h3",{attrs:{id:"_7-其中有几个name不存在-通过异步接口获取-如何做"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-其中有几个name不存在-通过异步接口获取-如何做"}},[a._v("#")]),a._v(" 7. 其中有⼏个name不存在，通过异步接⼝获取，如何做")]),a._v(" "),r("h3",{attrs:{id:"_8-渲染的时候key给什么值-可以使用index吗-用id好还是index好-a-webpack如何配sass-需要配哪些loader-b-配css需要哪些loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-渲染的时候key给什么值-可以使用index吗-用id好还是index好-a-webpack如何配sass-需要配哪些loader-b-配css需要哪些loader"}},[a._v("#")]),a._v(" 8. 渲染的时候key给什么值，可以使⽤index吗，⽤id好还是index好 a. webpack如何配sass，需要配哪些loader b. 配css需要哪些loader")]),a._v(" "),r("h3",{attrs:{id:"_9-如何配置把js、css、html单独打包成一个文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何配置把js、css、html单独打包成一个文件"}},[a._v("#")]),a._v(" 9. 如何配置把js、css、html单独打包成⼀个⽂件")]),a._v(" "),r("h3",{attrs:{id:"_10-div垂直水平居中-flex、绝对定位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-div垂直水平居中-flex、绝对定位"}},[a._v("#")]),a._v(" 10. div垂直⽔平居中（flex、绝对定位）")]),a._v(" "),r("h3",{attrs:{id:"_11-两个元素块-一左一右-中间相距10像素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-两个元素块-一左一右-中间相距10像素"}},[a._v("#")]),a._v(" 11. 两个元素块，⼀左⼀右，中间相距10像素")]),a._v(" "),r("h3",{attrs:{id:"_12-上下固定-中间滚动布局如何实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-上下固定-中间滚动布局如何实现"}},[a._v("#")]),a._v(" 12. 上下固定，中间滚动布局如何实现")]),a._v(" "),r("h3",{attrs:{id:"_13-1-2-3-4-5-变成-1-2-3-a-b-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-2-3-4-5-变成-1-2-3-a-b-5"}},[a._v("#")]),a._v(" 13. [1, 2, 3, 4, 5]变成[1, 2, 3, a, b, 5]")]),a._v(" "),r("h3",{attrs:{id:"_14-取数组的最大值-es5、es6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-取数组的最大值-es5、es6"}},[a._v("#")]),a._v(" 14. 取数组的最⼤值（ES5、ES6）")]),a._v(" "),r("h3",{attrs:{id:"_15-apply和call的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-apply和call的区别"}},[a._v("#")]),a._v(" 15. apply和call的区别")]),a._v(" "),r("h3",{attrs:{id:"_16-es5和es6有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-es5和es6有什么区别"}},[a._v("#")]),a._v(" 16. ES5和ES6有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_17-some、every、find、filter、map、foreach有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-some、every、find、filter、map、foreach有什么区别"}},[a._v("#")]),a._v(" 17. some、every、find、filter、map、forEach有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_18-上述数组随机取数-每次返回的值都不一样"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-上述数组随机取数-每次返回的值都不一样"}},[a._v("#")]),a._v(" 18. 上述数组随机取数，每次返回的值都不⼀样")]),a._v(" "),r("h3",{attrs:{id:"_19-如何找0-5的随机数-95-99呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-如何找0-5的随机数-95-99呢"}},[a._v("#")]),a._v(" 19. 如何找0-5的随机数，95-99呢")]),a._v(" "),r("h3",{attrs:{id:"_20-⻚面上有1万个button如何绑定事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-⻚面上有1万个button如何绑定事件"}},[a._v("#")]),a._v(" 20. ⻚⾯上有1万个button如何绑定事件")]),a._v(" "),r("h3",{attrs:{id:"_21-如何判断是button"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-如何判断是button"}},[a._v("#")]),a._v(" 21. 如何判断是button")]),a._v(" "),r("h3",{attrs:{id:"_22-⻚面上生成一万个button-并且绑定事件-如何做-js原生操作dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-⻚面上生成一万个button-并且绑定事件-如何做-js原生操作dom"}},[a._v("#")]),a._v(" 22. ⻚⾯上⽣成⼀万个button，并且绑定事件，如何做（JS原⽣操作DOM）")]),a._v(" "),r("h3",{attrs:{id:"_23-循环绑定时的index是多少-为什么-怎么解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-循环绑定时的index是多少-为什么-怎么解决"}},[a._v("#")]),a._v(" 23. 循环绑定时的index是多少，为什么，怎么解决")]),a._v(" "),r("h3",{attrs:{id:"_24-⻚面上有一个input-还有一个p标签-改变input后p标签就跟着变化-如何处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-⻚面上有一个input-还有一个p标签-改变input后p标签就跟着变化-如何处理"}},[a._v("#")]),a._v(" 24. ⻚⾯上有⼀个input，还有⼀个p标签，改变input后p标签就跟着变化， 如何处理")]),a._v(" "),r("h3",{attrs:{id:"_25-监听input的哪个事件-在什么时候触发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-监听input的哪个事件-在什么时候触发"}},[a._v("#")]),a._v(" 25. 监听input的哪个事件，在什么时候触发")]),a._v(" "),r("h2",{attrs:{id:"九、携程-7-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九、携程-7-问"}},[a._v("#")]),a._v(" 九、携程(7 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-对react看法-有没有遇到一些坑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-对react看法-有没有遇到一些坑"}},[a._v("#")]),a._v(" 1. 对React看法，有没有遇到⼀些坑")]),a._v(" "),r("h3",{attrs:{id:"_2-对闭包的看法-为什么要用闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-对闭包的看法-为什么要用闭包"}},[a._v("#")]),a._v(" 2. 对闭包的看法，为什么要⽤闭包")]),a._v(" "),r("h3",{attrs:{id:"_3-手写数组去重函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-手写数组去重函数"}},[a._v("#")]),a._v(" 3. ⼿写数组去重函数")]),a._v(" "),r("h3",{attrs:{id:"_4-手写数组扁平化函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-手写数组扁平化函数"}},[a._v("#")]),a._v(" 4. ⼿写数组扁平化函数")]),a._v(" "),r("h3",{attrs:{id:"_5-介绍下promise的用途和性质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍下promise的用途和性质"}},[a._v("#")]),a._v(" 5. 介绍下Promise的⽤途和性质")]),a._v(" "),r("h3",{attrs:{id:"_6-promise和callback有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-promise和callback有什么区别"}},[a._v("#")]),a._v(" 6. Promise和Callback有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_7-react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-react生命周期"}},[a._v("#")]),a._v(" 7. React⽣命周期")]),a._v(" "),r("h2",{attrs:{id:"十、喜马拉雅-30-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十、喜马拉雅-30-问"}},[a._v("#")]),a._v(" 十、喜马拉雅(30 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-es6新的特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-es6新的特性"}},[a._v("#")]),a._v(" 1. ES6新的特性")]),a._v(" "),r("h3",{attrs:{id:"_2-介绍promise"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍promise"}},[a._v("#")]),a._v(" 2. 介绍Promise")]),a._v(" "),r("h3",{attrs:{id:"_3-promise有几个状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-promise有几个状态"}},[a._v("#")]),a._v(" 3. Promise有⼏个状态")]),a._v(" "),r("h3",{attrs:{id:"_4-说一下闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-说一下闭包"}},[a._v("#")]),a._v(" 4. 说⼀下闭包")]),a._v(" "),r("h3",{attrs:{id:"_5-react的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-react的生命周期"}},[a._v("#")]),a._v(" 5. React的⽣命周期")]),a._v(" "),r("h3",{attrs:{id:"_6-componentwillreceiveprops的触发条件是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-componentwillreceiveprops的触发条件是什么"}},[a._v("#")]),a._v(" 6. componentWillReceiveProps的触发条件是什么")]),a._v(" "),r("h3",{attrs:{id:"_7-react16-3对生命周期的改变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-react16-3对生命周期的改变"}},[a._v("#")]),a._v(" 7. React16.3对⽣命周期的改变")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍下react的filber架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍下react的filber架构"}},[a._v("#")]),a._v(" 8. 介绍下React的Filber架构")]),a._v(" "),r("h3",{attrs:{id:"_9-画filber渲染树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-画filber渲染树"}},[a._v("#")]),a._v(" 9. 画Filber渲染树")]),a._v(" "),r("h3",{attrs:{id:"_10-介绍react高阶组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-介绍react高阶组件"}},[a._v("#")]),a._v(" 10. 介绍React⾼阶组件")]),a._v(" "),r("h3",{attrs:{id:"_11-父子组件之间如何通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-父子组件之间如何通信"}},[a._v("#")]),a._v(" 11. ⽗⼦组件之间如何通信")]),a._v(" "),r("h3",{attrs:{id:"_12-redux怎么实现属性传递-介绍下原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-redux怎么实现属性传递-介绍下原理"}},[a._v("#")]),a._v(" 12. Redux怎么实现属性传递，介绍下原理")]),a._v(" "),r("h3",{attrs:{id:"_13-react-router版本号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-react-router版本号"}},[a._v("#")]),a._v(" 13. React-Router版本号")]),a._v(" "),r("h3",{attrs:{id:"_14-网站seo怎么处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-网站seo怎么处理"}},[a._v("#")]),a._v(" 14. ⽹站SEO怎么处理")]),a._v(" "),r("h3",{attrs:{id:"_15-介绍下http状态码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-介绍下http状态码"}},[a._v("#")]),a._v(" 15. 介绍下HTTP状态码")]),a._v(" "),r("h3",{attrs:{id:"_16-403、301、302是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-403、301、302是什么"}},[a._v("#")]),a._v(" 16. 403、301、302是什么")]),a._v(" "),r("h3",{attrs:{id:"_17-缓存相关的http请求头"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-缓存相关的http请求头"}},[a._v("#")]),a._v(" 17. 缓存相关的HTTP请求头")]),a._v(" "),r("h3",{attrs:{id:"_18-介绍https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-介绍https"}},[a._v("#")]),a._v(" 18. 介绍HTTPS")]),a._v(" "),r("h3",{attrs:{id:"_19-https怎么建立安全通道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-https怎么建立安全通道"}},[a._v("#")]),a._v(" 19. HTTPS怎么建⽴安全通道")]),a._v(" "),r("h3",{attrs:{id:"_20-前端性能优化-js原生和react"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-前端性能优化-js原生和react"}},[a._v("#")]),a._v(" 20. 前端性能优化（JS原⽣和React）")]),a._v(" "),r("h3",{attrs:{id:"_21-用户体验做过什么优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-用户体验做过什么优化"}},[a._v("#")]),a._v(" 21. ⽤户体验做过什么优化")]),a._v(" "),r("h3",{attrs:{id:"_22-对pwa有什么了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-对pwa有什么了解"}},[a._v("#")]),a._v(" 22. 对PWA有什么了解")]),a._v(" "),r("h3",{attrs:{id:"_23-对安全有什么了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-对安全有什么了解"}},[a._v("#")]),a._v(" 23. 对安全有什么了解")]),a._v(" "),r("h3",{attrs:{id:"_24-介绍下数字签名的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-介绍下数字签名的原理"}},[a._v("#")]),a._v(" 24. 介绍下数字签名的原理")]),a._v(" "),r("h3",{attrs:{id:"_25-前后端通信使用什么方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-前后端通信使用什么方案"}},[a._v("#")]),a._v(" 25. 前后端通信使⽤什么⽅案")]),a._v(" "),r("h3",{attrs:{id:"_26-restful常用的method"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-restful常用的method"}},[a._v("#")]),a._v(" 26. RESTful常⽤的Method")]),a._v(" "),r("h3",{attrs:{id:"_27-介绍下跨域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-介绍下跨域"}},[a._v("#")]),a._v(" 27. 介绍下跨域")]),a._v(" "),r("h3",{attrs:{id:"_28-access-control-allow-origin在服务端哪里配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-access-control-allow-origin在服务端哪里配置"}},[a._v("#")]),a._v(" 28. Access-Control-Allow-Origin在服务端哪⾥配置")]),a._v(" "),r("h3",{attrs:{id:"_29-csrf跨站攻击怎么解决"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_29-csrf跨站攻击怎么解决"}},[a._v("#")]),a._v(" 29. csrf跨站攻击怎么解决")]),a._v(" "),r("h3",{attrs:{id:"_30-前端和后端怎么联调"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_30-前端和后端怎么联调"}},[a._v("#")]),a._v(" 30. 前端和后端怎么联调")]),a._v(" "),r("h2",{attrs:{id:"十一、兑吧-33-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十一、兑吧-33-问"}},[a._v("#")]),a._v(" 十一、兑吧(33 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-localstorage和cookie有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-localstorage和cookie有什么区别"}},[a._v("#")]),a._v(" 1. localStorage和cookie有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_2-css选择器有哪些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-css选择器有哪些"}},[a._v("#")]),a._v(" 2. CSS选择器有哪些")]),a._v(" "),r("h3",{attrs:{id:"_3-盒子模型-以及标准情况和ie下的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-盒子模型-以及标准情况和ie下的区别"}},[a._v("#")]),a._v(" 3. 盒⼦模型，以及标准情况和IE下的区别")]),a._v(" "),r("h3",{attrs:{id:"_4-如何实现高度自适应"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何实现高度自适应"}},[a._v("#")]),a._v(" 4. 如何实现⾼度⾃适应")]),a._v(" "),r("h3",{attrs:{id:"_5-prototype和-proto-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-prototype和-proto-区别"}},[a._v("#")]),a._v(" 5. prototype和__proto__区别")]),a._v(" "),r("h3",{attrs:{id:"_6-construct是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-construct是什么"}},[a._v("#")]),a._v(" 6. _construct是什么")]),a._v(" "),r("h3",{attrs:{id:"_7-new是怎么实现的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-new是怎么实现的"}},[a._v("#")]),a._v(" 7. new是怎么实现的")]),a._v(" "),r("h3",{attrs:{id:"_8-promise的精髓-以及优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-promise的精髓-以及优缺点"}},[a._v("#")]),a._v(" 8. promise的精髓，以及优缺点")]),a._v(" "),r("h3",{attrs:{id:"_9-如何实现h5手机端的适配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何实现h5手机端的适配"}},[a._v("#")]),a._v(" 9. 如何实现H5⼿机端的适配")]),a._v(" "),r("h3",{attrs:{id:"_10-rem、flex的区别-root-em"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-rem、flex的区别-root-em"}},[a._v("#")]),a._v(" 10. rem、flex的区别（root em）")]),a._v(" "),r("h3",{attrs:{id:"_11-em和px的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-em和px的区别"}},[a._v("#")]),a._v(" 11. em和px的区别")]),a._v(" "),r("h3",{attrs:{id:"_12-react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-react生命周期"}},[a._v("#")]),a._v(" 12. React生命周期")]),a._v(" "),r("h3",{attrs:{id:"_13-如何去除url中的-号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-如何去除url中的-号"}},[a._v("#")]),a._v(" 13. 如何去除url中的#号")]),a._v(" "),r("h3",{attrs:{id:"_14-redux状态管理器和变量挂载到window中有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-redux状态管理器和变量挂载到window中有什么区别"}},[a._v("#")]),a._v(" 14. Redux状态管理器和变量挂载到window中有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_15-webpack和gulp的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-webpack和gulp的优缺点"}},[a._v("#")]),a._v(" 15. webpack和gulp的优缺点")]),a._v(" "),r("h3",{attrs:{id:"_16-如何实现异步加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-如何实现异步加载"}},[a._v("#")]),a._v(" 16. 如何实现异步加载")]),a._v(" "),r("h3",{attrs:{id:"_17-如何实现分模块打包-多入口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-如何实现分模块打包-多入口"}},[a._v("#")]),a._v(" 17. 如何实现分模块打包（多⼊⼝）")]),a._v(" "),r("h3",{attrs:{id:"_18-前端性能优化-1js-css-2-图片-3-缓存预加载-4-ssr-5-多域名加-载-6-负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-前端性能优化-1js-css-2-图片-3-缓存预加载-4-ssr-5-多域名加-载-6-负载均衡"}},[a._v("#")]),a._v(" 18. 前端性能优化（1js css；2 图⽚；3 缓存预加载； 4 SSR； 5 多域名加 载；6 负载均衡）")]),a._v(" "),r("h3",{attrs:{id:"_19-并发请求资源数上限-6个"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-并发请求资源数上限-6个"}},[a._v("#")]),a._v(" 19. 并发请求资源数上限（6个）")]),a._v(" "),r("h3",{attrs:{id:"_20-base64为什么能提升性能-缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-base64为什么能提升性能-缺点"}},[a._v("#")]),a._v(" 20. base64为什么能提升性能，缺点")]),a._v(" "),r("h3",{attrs:{id:"_21-介绍webp这个图片文件格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-介绍webp这个图片文件格式"}},[a._v("#")]),a._v(" 21. 介绍webp这个图⽚⽂件格式")]),a._v(" "),r("h3",{attrs:{id:"_22-介绍koa2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-介绍koa2"}},[a._v("#")]),a._v(" 22. 介绍koa2")]),a._v(" "),r("h3",{attrs:{id:"_23-promise如何实现的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-promise如何实现的"}},[a._v("#")]),a._v(" 23. Promise如何实现的")]),a._v(" "),r("h3",{attrs:{id:"_24-异步请求-低版本fetch如何低版本适配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-异步请求-低版本fetch如何低版本适配"}},[a._v("#")]),a._v(" 24. 异步请求，低版本fetch如何低版本适配")]),a._v(" "),r("h3",{attrs:{id:"_25-ajax如何处理跨域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-ajax如何处理跨域"}},[a._v("#")]),a._v(" 25. ajax如何处理跨域")]),a._v(" "),r("h3",{attrs:{id:"_26-cors如何设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-cors如何设置"}},[a._v("#")]),a._v(" 26. CORS如何设置")]),a._v(" "),r("h3",{attrs:{id:"_27-jsonp为什么不支持post方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-jsonp为什么不支持post方法"}},[a._v("#")]),a._v(" 27. jsonp为什么不⽀持post⽅法")]),a._v(" "),r("h3",{attrs:{id:"_28-介绍同源策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-介绍同源策略"}},[a._v("#")]),a._v(" 28. 介绍同源策略")]),a._v(" "),r("h3",{attrs:{id:"_29-react使用过的一些组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_29-react使用过的一些组件"}},[a._v("#")]),a._v(" 29. React使⽤过的⼀些组件")]),a._v(" "),r("h3",{attrs:{id:"_30-介绍immuable"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_30-介绍immuable"}},[a._v("#")]),a._v(" 30. 介绍Immuable")]),a._v(" "),r("h3",{attrs:{id:"_31-介绍下redux整个流程原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_31-介绍下redux整个流程原理"}},[a._v("#")]),a._v(" 31. 介绍下redux整个流程原理")]),a._v(" "),r("h3",{attrs:{id:"_32-介绍原型链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-介绍原型链"}},[a._v("#")]),a._v(" 32. 介绍原型链")]),a._v(" "),r("h3",{attrs:{id:"_33-如何继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_33-如何继承"}},[a._v("#")]),a._v(" 33. 如何继承")]),a._v(" "),r("h2",{attrs:{id:"十二、微医-40-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十二、微医-40-问"}},[a._v("#")]),a._v(" 十二、微医(40 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-介绍js数据类型-基本数据类型和引用数据类型的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍js数据类型-基本数据类型和引用数据类型的区别"}},[a._v("#")]),a._v(" 1. 介绍JS数据类型，基本数据类型和引⽤数据类型的区别")]),a._v(" "),r("h3",{attrs:{id:"_2-array是object类型吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-array是object类型吗"}},[a._v("#")]),a._v(" 2. Array是Object类型吗")]),a._v(" "),r("h3",{attrs:{id:"_3-数据类型分别存在哪里"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型分别存在哪里"}},[a._v("#")]),a._v(" 3. 数据类型分别存在哪⾥")]),a._v(" "),r("blockquote",[r("p",[a._v('a. var a = {name: "前端开发"};')]),a._v(" "),r("p",[a._v("var b = a;")]),a._v(" "),r("p",[a._v("a = null那么b 输出什么")]),a._v(" "),r("p",[a._v("b. var a = {b: 1}存放在哪⾥")]),a._v(" "),r("p",[a._v("c. var a = {b: {c: 1}}存放在哪⾥")])]),a._v(" "),r("h3",{attrs:{id:"_4-栈和堆的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-栈和堆的区别"}},[a._v("#")]),a._v(" 4. 栈和堆的区别")]),a._v(" "),r("h3",{attrs:{id:"_5-垃圾回收时栈和堆的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-垃圾回收时栈和堆的区别"}},[a._v("#")]),a._v(" 5. 垃圾回收时栈和堆的区别")]),a._v(" "),r("h3",{attrs:{id:"_6-数组里面有10万个数据-取第一个元素和第10万个元素的时间相差多少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-数组里面有10万个数据-取第一个元素和第10万个元素的时间相差多少"}},[a._v("#")]),a._v(" 6. 数组⾥⾯有10万个数据，取第⼀个元素和第10万个元素的时间相差多少")]),a._v(" "),r("h3",{attrs:{id:"_7-栈和堆具体怎么存储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-栈和堆具体怎么存储"}},[a._v("#")]),a._v(" 7. 栈和堆具体怎么存储")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍闭包以及闭包为什么没清除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍闭包以及闭包为什么没清除"}},[a._v("#")]),a._v(" 8. 介绍闭包以及闭包为什么没清除")]),a._v(" "),r("h3",{attrs:{id:"_9-闭包的使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-闭包的使用场景"}},[a._v("#")]),a._v(" 9. 闭包的使⽤场景")]),a._v(" "),r("h3",{attrs:{id:"_10-js怎么实现异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-js怎么实现异步"}},[a._v("#")]),a._v(" 10. JS怎么实现异步")]),a._v(" "),r("h3",{attrs:{id:"_11-异步整个执行周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-异步整个执行周期"}},[a._v("#")]),a._v(" 11. 异步整个执⾏周期")]),a._v(" "),r("h3",{attrs:{id:"_12-promise的三种状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-promise的三种状态"}},[a._v("#")]),a._v(" 12. Promise的三种状态")]),a._v(" "),r("h3",{attrs:{id:"_13-async-await怎么实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-async-await怎么实现"}},[a._v("#")]),a._v(" 13. Async/Await怎么实现")]),a._v(" "),r("h3",{attrs:{id:"_14-promise和settimeout执行先后的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-promise和settimeout执行先后的区别"}},[a._v("#")]),a._v(" 14. Promise和setTimeout执⾏先后的区别")]),a._v(" "),r("h3",{attrs:{id:"_15-js为什么要区分微任务和宏任务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-js为什么要区分微任务和宏任务"}},[a._v("#")]),a._v(" 15. JS为什么要区分微任务和宏任务")]),a._v(" "),r("h3",{attrs:{id:"_16-promise构造函数是同步还是异步执行-then呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-promise构造函数是同步还是异步执行-then呢"}},[a._v("#")]),a._v(" 16. Promise构造函数是同步还是异步执⾏，then呢")]),a._v(" "),r("h3",{attrs:{id:"_17-发布-订阅和观察者模式的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-发布-订阅和观察者模式的区别"}},[a._v("#")]),a._v(" 17. 发布-订阅和观察者模式的区别")]),a._v(" "),r("h3",{attrs:{id:"_18-js执行过程中分为哪些阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-js执行过程中分为哪些阶段"}},[a._v("#")]),a._v(" 18. JS执⾏过程中分为哪些阶段")]),a._v(" "),r("h3",{attrs:{id:"_19-词法作用域和this的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-词法作用域和this的区别"}},[a._v("#")]),a._v(" 19. 词法作⽤域和this的区别")]),a._v(" "),r("h3",{attrs:{id:"_20-平常是怎么做继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-平常是怎么做继承"}},[a._v("#")]),a._v(" 20. 平常是怎么做继承")]),a._v(" "),r("h3",{attrs:{id:"_21-深拷⻉和浅拷⻉"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-深拷⻉和浅拷⻉"}},[a._v("#")]),a._v(" 21. 深拷⻉和浅拷⻉")]),a._v(" "),r("h3",{attrs:{id:"_22-loadsh深拷⻉实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-loadsh深拷⻉实现原理"}},[a._v("#")]),a._v(" 22. loadsh深拷⻉实现原理")]),a._v(" "),r("h3",{attrs:{id:"_23-es6中let块作用域是怎么实现的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-es6中let块作用域是怎么实现的"}},[a._v("#")]),a._v(" 23. ES6中let块作⽤域是怎么实现的")]),a._v(" "),r("h3",{attrs:{id:"_24-react中setstate后发生了什么-a-setstate为什么默认是异步-b-setstate什么时候是同步的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-react中setstate后发生了什么-a-setstate为什么默认是异步-b-setstate什么时候是同步的"}},[a._v("#")]),a._v(" 24. React中setState后发⽣了什么 a. setState为什么默认是异步 b. setState什么时候是同步的")]),a._v(" "),r("h3",{attrs:{id:"_25-为什么3大框架出现以后就出现很多native-rn-框架-虚拟dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-为什么3大框架出现以后就出现很多native-rn-框架-虚拟dom"}},[a._v("#")]),a._v(" 25. 为什么3⼤框架出现以后就出现很多native（RN）框架（虚拟DOM）")]),a._v(" "),r("h3",{attrs:{id:"_26-虚拟dom主要做了什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-虚拟dom主要做了什么"}},[a._v("#")]),a._v(" 26. 虚拟DOM主要做了什么")]),a._v(" "),r("h3",{attrs:{id:"_27-虚拟dom本身是什么-js对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-虚拟dom本身是什么-js对象"}},[a._v("#")]),a._v(" 27. 虚拟DOM本身是什么（JS对象）")]),a._v(" "),r("h3",{attrs:{id:"_28-304是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-304是什么"}},[a._v("#")]),a._v(" 28. 304是什么")]),a._v(" "),r("h3",{attrs:{id:"_29-打包时hash码是怎么生成的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_29-打包时hash码是怎么生成的"}},[a._v("#")]),a._v(" 29. 打包时Hash码是怎么⽣成的")]),a._v(" "),r("h3",{attrs:{id:"_30-随机值存在一样的情况-如何避免"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_30-随机值存在一样的情况-如何避免"}},[a._v("#")]),a._v(" 30. 随机值存在⼀样的情况，如何避免")]),a._v(" "),r("h3",{attrs:{id:"_31-使用webpack构建时有无做一些自定义操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_31-使用webpack构建时有无做一些自定义操作"}},[a._v("#")]),a._v(" 31. 使⽤webpack构建时有⽆做⼀些⾃定义操作")]),a._v(" "),r("h3",{attrs:{id:"_32-webpack做了什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-webpack做了什么"}},[a._v("#")]),a._v(" 32. webpack做了什么")]),a._v(" "),r("h3",{attrs:{id:"_33-a-b两个按钮-点击aba-返回顺序可能是baa-如何保证是-aba-promise-then"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_33-a-b两个按钮-点击aba-返回顺序可能是baa-如何保证是-aba-promise-then"}},[a._v("#")]),a._v(" 33. a，b两个按钮，点击aba，返回顺序可能是baa，如何保证是 aba（Promise.then）")]),a._v(" "),r("blockquote",[r("p",[a._v("a. node接⼝转发有⽆做什么优化")]),a._v(" "),r("p",[a._v("b. node起服务如何保证稳定性，平缓降级，重启等")])]),a._v(" "),r("h3",{attrs:{id:"_34-rn有没有做热加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_34-rn有没有做热加载"}},[a._v("#")]),a._v(" 34. RN有没有做热加载")]),a._v(" "),r("h3",{attrs:{id:"_35-rn遇到的兼容性问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_35-rn遇到的兼容性问题"}},[a._v("#")]),a._v(" 35. RN遇到的兼容性问题")]),a._v(" "),r("h3",{attrs:{id:"_36-rn如何实现一个原生的组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_36-rn如何实现一个原生的组件"}},[a._v("#")]),a._v(" 36. RN如何实现⼀个原⽣的组件")]),a._v(" "),r("h3",{attrs:{id:"_37-rn混原生和原生混rn有什么不同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_37-rn混原生和原生混rn有什么不同"}},[a._v("#")]),a._v(" 37. RN混原⽣和原⽣混RN有什么不同")]),a._v(" "),r("h3",{attrs:{id:"_38-什么是单⻚项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_38-什么是单⻚项目"}},[a._v("#")]),a._v(" 38. 什么是单⻚项⽬")]),a._v(" "),r("h3",{attrs:{id:"_39-遇到的复杂业务场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_39-遇到的复杂业务场景"}},[a._v("#")]),a._v(" 39. 遇到的复杂业务场景")]),a._v(" "),r("h3",{attrs:{id:"_40-promise-all实现原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_40-promise-all实现原理"}},[a._v("#")]),a._v(" 40. Promise.all实现原理")]),a._v(" "),r("h2",{attrs:{id:"十三、寺库-20-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十三、寺库-20-问"}},[a._v("#")]),a._v(" 十三、寺库(20 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-介绍promise的特性-优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍promise的特性-优缺点"}},[a._v("#")]),a._v(" 1. 介绍Promise的特性，优缺点")]),a._v(" "),r("h3",{attrs:{id:"_2-介绍redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍redux"}},[a._v("#")]),a._v(" 2. 介绍Redux")]),a._v(" "),r("h3",{attrs:{id:"_3-rn的原理-为什么可以同时在安卓和ios端运行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-rn的原理-为什么可以同时在安卓和ios端运行"}},[a._v("#")]),a._v(" 3. RN的原理，为什么可以同时在安卓和IOS端运⾏")]),a._v(" "),r("h3",{attrs:{id:"_4-rn如何调用原生的一些功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-rn如何调用原生的一些功能"}},[a._v("#")]),a._v(" 4. RN如何调⽤原⽣的⼀些功能")]),a._v(" "),r("h3",{attrs:{id:"_5-介绍rn的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍rn的缺点"}},[a._v("#")]),a._v(" 5. 介绍RN的缺点")]),a._v(" "),r("h3",{attrs:{id:"_6-介绍排序算法和快排原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-介绍排序算法和快排原理"}},[a._v("#")]),a._v(" 6. 介绍排序算法和快排原理")]),a._v(" "),r("h3",{attrs:{id:"_7-堆和栈的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-堆和栈的区别"}},[a._v("#")]),a._v(" 7. 堆和栈的区别")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍闭包"}},[a._v("#")]),a._v(" 8. 介绍闭包")]),a._v(" "),r("h3",{attrs:{id:"_9-闭包的核心是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-闭包的核心是什么"}},[a._v("#")]),a._v(" 9. 闭包的核⼼是什么")]),a._v(" "),r("h3",{attrs:{id:"_10-网络的五层模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-网络的五层模型"}},[a._v("#")]),a._v(" 10. ⽹络的五层模型")]),a._v(" "),r("h3",{attrs:{id:"_11-http和https的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-http和https的区别"}},[a._v("#")]),a._v(" 11. HTTP和HTTPS的区别")]),a._v(" "),r("h3",{attrs:{id:"_12-https的加密过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-https的加密过程"}},[a._v("#")]),a._v(" 12. HTTPS的加密过程")]),a._v(" "),r("h3",{attrs:{id:"_13-介绍ssl和tls"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-介绍ssl和tls"}},[a._v("#")]),a._v(" 13. 介绍SSL和TLS")]),a._v(" "),r("h3",{attrs:{id:"_14-介绍dns解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-介绍dns解析"}},[a._v("#")]),a._v(" 14. 介绍DNS解析")]),a._v(" "),r("h3",{attrs:{id:"_15-js的继承方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-js的继承方法"}},[a._v("#")]),a._v(" 15. JS的继承⽅法")]),a._v(" "),r("h3",{attrs:{id:"_16-介绍垃圾回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-介绍垃圾回收"}},[a._v("#")]),a._v(" 16. 介绍垃圾回收")]),a._v(" "),r("h3",{attrs:{id:"_17-cookie的引用为了解决什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-cookie的引用为了解决什么问题"}},[a._v("#")]),a._v(" 17. cookie的引⽤为了解决什么问题")]),a._v(" "),r("h3",{attrs:{id:"_18-cookie和localstorage的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-cookie和localstorage的区别"}},[a._v("#")]),a._v(" 18. cookie和localStorage的区别")]),a._v(" "),r("h3",{attrs:{id:"_19-如何解决跨域问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-如何解决跨域问题"}},[a._v("#")]),a._v(" 19. 如何解决跨域问题")]),a._v(" "),r("h3",{attrs:{id:"_20-前端性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-前端性能优化"}},[a._v("#")]),a._v(" 20. 前端性能优化")]),a._v(" "),r("h2",{attrs:{id:"十四、宝宝树-15-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十四、宝宝树-15-问"}},[a._v("#")]),a._v(" 十四、宝宝树(15 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-使用canvas绘图时如何组织成通用组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用canvas绘图时如何组织成通用组件"}},[a._v("#")]),a._v(" 1. 使⽤canvas绘图时如何组织成通⽤组件")]),a._v(" "),r("h3",{attrs:{id:"_2-formdata和原生的ajax有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-formdata和原生的ajax有什么区别"}},[a._v("#")]),a._v(" 2. formData和原⽣的ajax有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_3-介绍下表单提交-和formdata有什么关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-介绍下表单提交-和formdata有什么关系"}},[a._v("#")]),a._v(" 3. 介绍下表单提交，和formData有什么关系")]),a._v(" "),r("h3",{attrs:{id:"_4-介绍redux接入流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-介绍redux接入流程"}},[a._v("#")]),a._v(" 4. 介绍redux接⼊流程")]),a._v(" "),r("h3",{attrs:{id:"_5-rudux和全局管理有什么区别-数据可控、数据响应"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-rudux和全局管理有什么区别-数据可控、数据响应"}},[a._v("#")]),a._v(" 5. rudux和全局管理有什么区别（数据可控、数据响应）")]),a._v(" "),r("h3",{attrs:{id:"_6-rn和原生通信-7-介绍mvp怎么组织"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-rn和原生通信-7-介绍mvp怎么组织"}},[a._v("#")]),a._v(" 6. RN和原⽣通信 7. 介绍MVP怎么组织")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍异步方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍异步方案"}},[a._v("#")]),a._v(" 8. 介绍异步⽅案")]),a._v(" "),r("h3",{attrs:{id:"_9-promise如何实现then处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-promise如何实现then处理"}},[a._v("#")]),a._v(" 9. promise如何实现then处理")]),a._v(" "),r("h3",{attrs:{id:"_10-koa2中间件原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-koa2中间件原理"}},[a._v("#")]),a._v(" 10. koa2中间件原理")]),a._v(" "),r("h3",{attrs:{id:"_11-常用的中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-常用的中间件"}},[a._v("#")]),a._v(" 11. 常⽤的中间件")]),a._v(" "),r("h3",{attrs:{id:"_12-服务端怎么做统一的状态处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-服务端怎么做统一的状态处理"}},[a._v("#")]),a._v(" 12. 服务端怎么做统⼀的状态处理")]),a._v(" "),r("h3",{attrs:{id:"_13-如何对相对路径引用进行优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-如何对相对路径引用进行优化"}},[a._v("#")]),a._v(" 13. 如何对相对路径引⽤进⾏优化")]),a._v(" "),r("h3",{attrs:{id:"_14-node文件查找优先级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-node文件查找优先级"}},[a._v("#")]),a._v(" 14. node⽂件查找优先级")]),a._v(" "),r("h3",{attrs:{id:"_15-npm2和npm3-有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-npm2和npm3-有什么区别"}},[a._v("#")]),a._v(" 15. npm2和npm3+有什么区别")]),a._v(" "),r("h2",{attrs:{id:"十五、海康威视-15-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十五、海康威视-15-问"}},[a._v("#")]),a._v(" 十五、海康威视(15 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-knex连接数据库响应回调"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-knex连接数据库响应回调"}},[a._v("#")]),a._v(" 1. knex连接数据库响应回调")]),a._v(" "),r("h3",{attrs:{id:"_2-介绍异步方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍异步方案"}},[a._v("#")]),a._v(" 2. 介绍异步⽅案")]),a._v(" "),r("h3",{attrs:{id:"_3-如何处理异常捕获"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何处理异常捕获"}},[a._v("#")]),a._v(" 3. 如何处理异常捕获")]),a._v(" "),r("h3",{attrs:{id:"_4-项目如何管理模块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-项目如何管理模块"}},[a._v("#")]),a._v(" 4. 项⽬如何管理模块")]),a._v(" "),r("h3",{attrs:{id:"_5-前端性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-前端性能优化"}},[a._v("#")]),a._v(" 5. 前端性能优化")]),a._v(" "),r("h3",{attrs:{id:"_6-js继承方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-js继承方案"}},[a._v("#")]),a._v(" 6. JS继承⽅案")]),a._v(" "),r("h3",{attrs:{id:"_7-如何判断一个变量是不是数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何判断一个变量是不是数组"}},[a._v("#")]),a._v(" 7. 如何判断⼀个变量是不是数组")]),a._v(" "),r("h3",{attrs:{id:"_8-变量a和b-如何交换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-变量a和b-如何交换"}},[a._v("#")]),a._v(" 8. 变量a和b，如何交换")]),a._v(" "),r("h3",{attrs:{id:"_9-事件委托"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-事件委托"}},[a._v("#")]),a._v(" 9. 事件委托")]),a._v(" "),r("h3",{attrs:{id:"_10-标签生成的dom结构是一个类数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-标签生成的dom结构是一个类数组"}},[a._v("#")]),a._v(" 10. 标签⽣成的Dom结构是⼀个类数组")]),a._v(" "),r("h3",{attrs:{id:"_11-类数组和数组的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-类数组和数组的区别"}},[a._v("#")]),a._v(" 11. 类数组和数组的区别")]),a._v(" "),r("h3",{attrs:{id:"_12-dom的类数组如何转成数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-dom的类数组如何转成数组"}},[a._v("#")]),a._v(" 12. dom的类数组如何转成数组")]),a._v(" "),r("h3",{attrs:{id:"_13-介绍单⻚面应用和多⻚面应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-介绍单⻚面应用和多⻚面应用"}},[a._v("#")]),a._v(" 13. 介绍单⻚⾯应⽤和多⻚⾯应⽤")]),a._v(" "),r("h3",{attrs:{id:"_14-redux状态树的管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-redux状态树的管理"}},[a._v("#")]),a._v(" 14. redux状态树的管理")]),a._v(" "),r("h3",{attrs:{id:"_15-介绍localstorage的api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-介绍localstorage的api"}},[a._v("#")]),a._v(" 15. 介绍localstorage的API")]),a._v(" "),r("h2",{attrs:{id:"十六、蘑菇街-15-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十六、蘑菇街-15-问"}},[a._v("#")]),a._v(" 十六、蘑菇街(15 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-html语义化的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-html语义化的理解"}},[a._v("#")]),a._v(" 1. html语义化的理解")]),a._v(" "),r("h3",{attrs:{id:"_2-b-和-strong-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-b-和-strong-的区别"}},[a._v("#")]),a._v(" 2. <b> 和 <strong> 的区别")]),a._v(" "),r("h3",{attrs:{id:"_3-对闭包的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-对闭包的理解"}},[a._v("#")]),a._v(" 3. 对闭包的理解")]),a._v(" "),r("h3",{attrs:{id:"_4-工程中闭包使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-工程中闭包使用场景"}},[a._v("#")]),a._v(" 4. ⼯程中闭包使⽤场景")]),a._v(" "),r("h3",{attrs:{id:"_5-介绍this和原型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-介绍this和原型"}},[a._v("#")]),a._v(" 5. 介绍this和原型")]),a._v(" "),r("h3",{attrs:{id:"_6-使用原型最大的好处"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-使用原型最大的好处"}},[a._v("#")]),a._v(" 6. 使⽤原型最⼤的好处")]),a._v(" "),r("h3",{attrs:{id:"_7-react设计思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-react设计思路"}},[a._v("#")]),a._v(" 7. react设计思路")]),a._v(" "),r("h3",{attrs:{id:"_8-为什么虚拟dom比真实dom性能好"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-为什么虚拟dom比真实dom性能好"}},[a._v("#")]),a._v(" 8. 为什么虚拟DOM⽐真实DOM性能好")]),a._v(" "),r("h3",{attrs:{id:"_9-react常⻅的通信方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-react常⻅的通信方式"}},[a._v("#")]),a._v(" 9. react常⻅的通信⽅式")]),a._v(" "),r("h3",{attrs:{id:"_10-redux整体的工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-redux整体的工作流程"}},[a._v("#")]),a._v(" 10. redux整体的⼯作流程")]),a._v(" "),r("h3",{attrs:{id:"_11-redux和全局对象之间的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-redux和全局对象之间的区别"}},[a._v("#")]),a._v(" 11. redux和全局对象之间的区别")]),a._v(" "),r("h3",{attrs:{id:"_12-redux数据回溯设计思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-redux数据回溯设计思路"}},[a._v("#")]),a._v(" 12. Redux数据回溯设计思路")]),a._v(" "),r("h3",{attrs:{id:"_13-单例、工厂、观察者项目中实际场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-单例、工厂、观察者项目中实际场景"}},[a._v("#")]),a._v(" 13. 单例、⼯⼚、观察者项⽬中实际场景")]),a._v(" "),r("h3",{attrs:{id:"_14-项目中树的使用场景以及了解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-项目中树的使用场景以及了解"}},[a._v("#")]),a._v(" 14. 项⽬中树的使⽤场景以及了解")]),a._v(" "),r("h3",{attrs:{id:"_15-工作收获"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-工作收获"}},[a._v("#")]),a._v(" 15. ⼯作收获")]),a._v(" "),r("h2",{attrs:{id:"十七、酷家乐-21-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十七、酷家乐-21-问"}},[a._v("#")]),a._v(" 十七、酷家乐(21 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-react生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-react生命周期"}},[a._v("#")]),a._v(" 1. react⽣命周期")]),a._v(" "),r("h3",{attrs:{id:"_2-react性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-react性能优化"}},[a._v("#")]),a._v(" 2. react性能优化")]),a._v(" "),r("h3",{attrs:{id:"_3-添加原生事件不移除为什么会内存泄露"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加原生事件不移除为什么会内存泄露"}},[a._v("#")]),a._v(" 3. 添加原⽣事件不移除为什么会内存泄露")]),a._v(" "),r("h3",{attrs:{id:"_4-还有哪些地方会内存泄露"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-还有哪些地方会内存泄露"}},[a._v("#")]),a._v(" 4. 还有哪些地⽅会内存泄露")]),a._v(" "),r("h3",{attrs:{id:"_5-setinterval需要注意的点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-setinterval需要注意的点"}},[a._v("#")]),a._v(" 5. setInterval需要注意的点")]),a._v(" "),r("h3",{attrs:{id:"_6-定时器为什么是不精确的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-定时器为什么是不精确的"}},[a._v("#")]),a._v(" 6. 定时器为什么是不精确的")]),a._v(" "),r("h3",{attrs:{id:"_7-settimeout-1-和settimeout-2-之间的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-settimeout-1-和settimeout-2-之间的区别"}},[a._v("#")]),a._v(" 7. setTimeout(1)和setTimeout(2)之间的区别")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍宏任务和微任务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍宏任务和微任务"}},[a._v("#")]),a._v(" 8. 介绍宏任务和微任务")]),a._v(" "),r("h3",{attrs:{id:"_9-promise里面和then里面执行有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-promise里面和then里面执行有什么区别"}},[a._v("#")]),a._v(" 9. promise⾥⾯和then⾥⾯执⾏有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_10-介绍purecomponet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-介绍purecomponet"}},[a._v("#")]),a._v(" 10. 介绍pureComponet")]),a._v(" "),r("h3",{attrs:{id:"_11-介绍function-component"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-介绍function-component"}},[a._v("#")]),a._v(" 11. 介绍Function Component")]),a._v(" "),r("h3",{attrs:{id:"_12-react数据流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-react数据流"}},[a._v("#")]),a._v(" 12. React数据流")]),a._v(" "),r("h3",{attrs:{id:"_13-props和state的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-props和state的区别"}},[a._v("#")]),a._v(" 13. props和state的区别")]),a._v(" "),r("h3",{attrs:{id:"_14-介绍react-context"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-介绍react-context"}},[a._v("#")]),a._v(" 14. 介绍react context")]),a._v(" "),r("h3",{attrs:{id:"_15-介绍class和es5的类以及区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-介绍class和es5的类以及区别"}},[a._v("#")]),a._v(" 15. 介绍class和ES5的类以及区别")]),a._v(" "),r("h3",{attrs:{id:"_16-介绍箭头函数和普通函数的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-介绍箭头函数和普通函数的区别"}},[a._v("#")]),a._v(" 16. 介绍箭头函数和普通函数的区别")]),a._v(" "),r("h3",{attrs:{id:"_17-介绍defineproperty方法-什么时候需要用到"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-介绍defineproperty方法-什么时候需要用到"}},[a._v("#")]),a._v(" 17. 介绍defineProperty⽅法，什么时候需要⽤到")]),a._v(" "),r("h3",{attrs:{id:"_18-for-in-和-object-keys的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-for-in-和-object-keys的区别"}},[a._v("#")]),a._v(" 18. for..in 和 object.keys的区别")]),a._v(" "),r("h3",{attrs:{id:"_19-介绍闭包-使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-介绍闭包-使用场景"}},[a._v("#")]),a._v(" 19. 介绍闭包，使⽤场景")]),a._v(" "),r("h3",{attrs:{id:"_20-使用闭包特权函数的使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-使用闭包特权函数的使用场景"}},[a._v("#")]),a._v(" 20. 使⽤闭包特权函数的使⽤场景")]),a._v(" "),r("h3",{attrs:{id:"_21-get和post有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-get和post有什么区别"}},[a._v("#")]),a._v(" 21. get和post有什么区别")]),a._v(" "),r("h2",{attrs:{id:"十八、百分点-14-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十八、百分点-14-问"}},[a._v("#")]),a._v(" 十八、百分点(14 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-react15-16-x的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-react15-16-x的区别"}},[a._v("#")]),a._v(" 1. React15/16.x的区别")]),a._v(" "),r("h3",{attrs:{id:"_2-重新渲染render会做些什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-重新渲染render会做些什么"}},[a._v("#")]),a._v(" 2. 重新渲染render会做些什么")]),a._v(" "),r("h3",{attrs:{id:"_3-哪些方法会触发react重新渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-哪些方法会触发react重新渲染"}},[a._v("#")]),a._v(" 3. 哪些⽅法会触发react重新渲染")]),a._v(" "),r("h3",{attrs:{id:"_4-state和props触发更新的生命周期分别有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-state和props触发更新的生命周期分别有什么区别"}},[a._v("#")]),a._v(" 4. state和props触发更新的⽣命周期分别有什么区别")]),a._v(" "),r("h3",{attrs:{id:"_5-setstate是同步还是异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-setstate是同步还是异步"}},[a._v("#")]),a._v(" 5. setState是同步还是异步")]),a._v(" "),r("h3",{attrs:{id:"_6-对无状态组件的理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-对无状态组件的理解"}},[a._v("#")]),a._v(" 6. 对⽆状态组件的理解")]),a._v(" "),r("h3",{attrs:{id:"_7-介绍redux工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-介绍redux工作流程"}},[a._v("#")]),a._v(" 7. 介绍Redux⼯作流程")]),a._v(" "),r("h3",{attrs:{id:"_8-介绍es6的功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-介绍es6的功能"}},[a._v("#")]),a._v(" 8. 介绍ES6的功能")]),a._v(" "),r("h3",{attrs:{id:"_9-let、const以及var的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-let、const以及var的区别"}},[a._v("#")]),a._v(" 9. let、const以及var的区别")]),a._v(" "),r("h3",{attrs:{id:"_10-浅拷⻉和深拷⻉的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-浅拷⻉和深拷⻉的区别"}},[a._v("#")]),a._v(" 10. 浅拷⻉和深拷⻉的区别")]),a._v(" "),r("h3",{attrs:{id:"_11-介绍箭头函数的this"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-介绍箭头函数的this"}},[a._v("#")]),a._v(" 11. 介绍箭头函数的this")]),a._v(" "),r("h3",{attrs:{id:"_12-介绍promise和then"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-介绍promise和then"}},[a._v("#")]),a._v(" 12. 介绍Promise和then")]),a._v(" "),r("h3",{attrs:{id:"_13-介绍快速排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-介绍快速排序"}},[a._v("#")]),a._v(" 13. 介绍快速排序")]),a._v(" "),r("h3",{attrs:{id:"_14-算法-前k个最大的元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-算法-前k个最大的元素"}},[a._v("#")]),a._v(" 14. 算法：前K个最⼤的元素")]),a._v(" "),r("h2",{attrs:{id:"十九、海风教育-14-问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十九、海风教育-14-问"}},[a._v("#")]),a._v(" 十九、海风教育(14 问)")]),a._v(" "),r("h3",{attrs:{id:"_1-对react看法-它的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-对react看法-它的优缺点"}},[a._v("#")]),a._v(" 1. 对react看法，它的优缺点")]),a._v(" "),r("h3",{attrs:{id:"_2-使用过程中遇到的问题-如何解决的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用过程中遇到的问题-如何解决的"}},[a._v("#")]),a._v(" 2. 使⽤过程中遇到的问题，如何解决的")]),a._v(" "),r("h3",{attrs:{id:"_3-react的理念是什么-拿函数式编程来做⻚面渲染"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-react的理念是什么-拿函数式编程来做⻚面渲染"}},[a._v("#")]),a._v(" 3. react的理念是什么（拿函数式编程来做⻚⾯渲染）")]),a._v(" "),r("h3",{attrs:{id:"_4-js是什么范式语言-面向对象还是函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-js是什么范式语言-面向对象还是函数式编程"}},[a._v("#")]),a._v(" 4. JS是什么范式语⾔(⾯向对象还是函数式编程)")]),a._v(" "),r("h3",{attrs:{id:"_5-koa原理-为什么要用koa-express和koa对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-koa原理-为什么要用koa-express和koa对比"}},[a._v("#")]),a._v(" 5. koa原理，为什么要⽤koa(express和koa对⽐)")]),a._v(" "),r("h3",{attrs:{id:"_6-使用的koa中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-使用的koa中间件"}},[a._v("#")]),a._v(" 6. 使⽤的koa中间件")]),a._v(" "),r("h3",{attrs:{id:"_7-es6使用的语法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-es6使用的语法"}},[a._v("#")]),a._v(" 7. ES6使⽤的语法")]),a._v(" "),r("h3",{attrs:{id:"_8-promise-和-async-await-和-callback的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-promise-和-async-await-和-callback的区别"}},[a._v("#")]),a._v(" 8. Promise 和 async/await 和 callback的区别")]),a._v(" "),r("h3",{attrs:{id:"_9-promise有没有解决异步的问题-promise链是真正强大的地方"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-promise有没有解决异步的问题-promise链是真正强大的地方"}},[a._v("#")]),a._v(" 9. Promise有没有解决异步的问题（promise链是真正强⼤的地⽅）")]),a._v(" "),r("h3",{attrs:{id:"_10-promise和settimeout的区别-event-loop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-promise和settimeout的区别-event-loop"}},[a._v("#")]),a._v(" 10. Promise和setTimeout的区别（Event Loop）")]),a._v(" "),r("h3",{attrs:{id:"_11-进程和线程的区别-一个node实例就是一个进程-node是单线程-通过-事件循环来实现异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-进程和线程的区别-一个node实例就是一个进程-node是单线程-通过-事件循环来实现异步"}},[a._v("#")]),a._v(" 11. 进程和线程的区别（⼀个node实例就是⼀个进程，node是单线程，通过 事件循环来实现异步")]),a._v(" "),r("h3",{attrs:{id:"_12-介绍下dfs深度优先"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-介绍下dfs深度优先"}},[a._v("#")]),a._v(" 12. 介绍下DFS深度优先")]),a._v(" "),r("h3",{attrs:{id:"_13-介绍下观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-介绍下观察者模式"}},[a._v("#")]),a._v(" 13. 介绍下观察者模式")]),a._v(" "),r("h3",{attrs:{id:"_14-观察者模式里面使用的数据结构-不具备顺序-是一个list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-观察者模式里面使用的数据结构-不具备顺序-是一个list"}},[a._v("#")]),a._v(" 14. 观察者模式⾥⾯使⽤的数据结构(不具备顺序 ，是⼀个list)")])])}),[],!1,null,null,null);t.default=_.exports}}]);